version: '3.8'

services:
  # Servicio de PostgreSQL
  postgres:
    image: postgres:latest
    container_name: assitant-rrhh-postgres-dev
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - '5432:5432'
    volumes:
      - pgdata_dev:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  # Servicio de la aplicaciÃ³n NestJS para desarrollo
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: assitant-rrhh-api-dev
    working_dir: /app
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./tsconfig.json:/app/tsconfig.json
      - ./tsconfig.build.json:/app/tsconfig.build.json
      - ./nest-cli.json:/app/nest-cli.json
      - ./typeorm.config.ts:/app/typeorm.config.ts
      - ./yarn.lock:/app/yarn.lock
      - node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3005
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - '3005:3005'
    command: >
      sh -c "
        yarn install --frozen-lockfile &&
        yarn mg:run &&
        yarn start:dev
      "
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata_dev:
  node_modules:
